/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.northwind.view;

import com.northwind.api.CustomerManagerInterface;
import com.northwind.api.factories.CustomerChildFactory;
import javax.swing.table.TableColumnModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.swing.etable.ETableColumn;
import org.netbeans.swing.etable.ETableColumnModel;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.northwind.view//Customers//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CustomersTopComponent",
        iconBase = "com/northwind/icons/users.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "com.northwind.view.CustomersTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CustomersAction",
        preferredID = "CustomersTopComponent"
)
@Messages({
    "CTL_CustomersAction=Customers",
    "CTL_CustomersTopComponent=Customers List",
    "HINT_CustomersTopComponent=This is a Customers list"
})
public final class CustomersTopComponent extends TopComponent 
        implements ExplorerManager.Provider {
    
    private final ExplorerManager mgr = new ExplorerManager();
//    private final CustomerManagerInterface manager = 
//            Lookup.getDefault().lookup(CustomerManagerInterface.class);

    public CustomersTopComponent() {
        initComponents();
        setName(Bundle.CTL_CustomersTopComponent());
        setToolTipText(Bundle.HINT_CustomersTopComponent());

        // Set the columns of the outline view, using the name of the property
        //+ followed by the text to be displayed in the column headers.
        outlineView.setPropertyColumns(
                "id", "Customer ID",
                "companyName", "Company",
                "streetAddress", "Street Address",
                "suiteNumber", "Suite",
                "city", "City",
                "state", "ST",
                "zipCode", "Zip Code",
                "contactName", "Contact",
                "phoneNumber", "Phone Number",
                "faxNumber", "Fax Number",
                "emailAddress", "Email Address");
        
        // Hide the root node, since we only care about the children:
        outlineView.getOutline().setRootVisible(false);
        
        TableColumnModel model = outlineView.getOutline().getColumnModel();
        ETableColumn col = (ETableColumn) model.getColumn(0);
        ((ETableColumnModel)model).setColumnHidden(col, true);
        
        mgr.setRootContext(new AbstractNode(Children.create(
                new CustomerChildFactory(), true)));
        associateLookup(ExplorerUtils.createLookup(mgr, getActionMap()));
    }
    
    @Override
    public ExplorerManager getExplorerManager() {
        return mgr;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outlineView = new org.openide.explorer.view.OutlineView();

        setLayout(new java.awt.BorderLayout());
        add(outlineView, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.OutlineView outlineView;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
